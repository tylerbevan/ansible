version: '2.1'

volumes:
  files:
    driver: local
  mysql:
    driver: local
  backup:
    driver: local
  redis:
    driver: local

services:
  owncloud:
    image: owncloud/server:{{ owncloud_version }}
    restart: always
    ports:
      - 8080:8080
    depends_on:
      - db
      - redis
    environment:
      - OWNCLOUD_DOMAIN={{ owncloud_domain }}
      - OWNCLOUD_DB_TYPE=mysql
      - OWNCLOUD_DB_NAME=owncloud
      - OWNCLOUD_DB_USERNAME=owncloud
      - OWNCLOUD_DB_PASSWORD=owncloud
      - OWNCLOUD_DB_HOST=db
      - OWNCLOUD_ADMIN_USERNAME={{ oc_username }}
      - OWNCLOUD_ADMIN_PASSWORD={{ oc_password }}
      - OWNCLOUD_MYSQL_UTF8MB4=true
      - OWNCLOUD_REDIS_ENABLED=true
      - OWNCLOUD_REDIS_HOST=redis
      - VIRTUAL_HOST={{ owncloud_domain }}
      - VIRTUAL_PORT=8080
    healthcheck:
      test: ["CMD", "/usr/bin/healthcheck"]
      interval: 30s
      timeout: 10s
      retries: 5
    volumes:
      - files:/mnt/data

  db:
    image: webhippie/mariadb:latest
    restart: always
    environment:
      - MARIADB_ROOT_PASSWORD=owncloud
      - MARIADB_USERNAME=owncloud
      - MARIADB_PASSWORD=owncloud
      - MARIADB_DATABASE=owncloud
      - MARIADB_MAX_ALLOWED_PACKET=128M
      - MARIADB_INNODB_LOG_FILE_SIZE=64M
    healthcheck:
      test: ["CMD", "/usr/bin/healthcheck"]
      interval: 30s
      timeout: 10s
      retries: 5
    volumes:
      - mysql:/var/lib/mysql
      - backup:/var/lib/backup

  redis:
    image: webhippie/redis:latest
    restart: always
    environment:
      - REDIS_DATABASES=1
    healthcheck:
      test: ["CMD", "/usr/bin/healthcheck"]
      interval: 30s
      timeout: 10s
      retries: 5
    volumes:
      - redis:/var/lib/redis

  proxy:
    hostname: proxy
    image: jwilder/nginx-proxy
    depends_on:
      - owncloud
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - /opt/htpasswd:/etc/nginx/htpasswd:ro
      - /opt/tbevan.us.crt:/etc/nginx/certs/tbevan.us.crt:ro
      - /opt/tbevan.us.key:/etc/nginx/certs/tbevan.us.key:ro
      - /var/run/docker.sock:/tmp/docker.sock:ro
